diff --git a/frameworks/base/media/libmediaplayerservice/StagefrightRecorder.cpp b/frameworks/base/media/libmediaplayerservice/StagefrightRecorder.cpp
index fe9f973..5cc001f 100644
--- a/frameworks/base/media/libmediaplayerservice/StagefrightRecorder.cpp
+++ b/frameworks/base/media/libmediaplayerservice/StagefrightRecorder.cpp
@@ -1555,7 +1555,7 @@ status_t StagefrightRecorder::setupVideoEncoder(
     CHECK_EQ(client.connect(), OK);
 
     uint32_t encoder_flags = 0;
-    if (mIsMetaDataStoredInVideoBuffers) {
+    if (0 && mIsMetaDataStoredInVideoBuffers) {
         LOGW("Camera source supports metadata mode, create OMXCodec for metadata");
         encoder_flags |= OMXCodec::kHardwareCodecsOnly;
         encoder_flags |= OMXCodec::kStoreMetaDataInVideoBuffers;
diff --git a/frameworks/base/media/libstagefright/MPEG4Writer.cpp b/frameworks/base/media/libstagefright/MPEG4Writer.cpp
index 53ae31f..ad401e9 100755
--- a/frameworks/base/media/libstagefright/MPEG4Writer.cpp
+++ b/frameworks/base/media/libstagefright/MPEG4Writer.cpp
@@ -1957,7 +1957,7 @@ status_t MPEG4Writer::Track::threadEntry() {
         CHECK(meta_data->findInt64(kKeyTime, &timestampUs));
 
 #ifdef QCOM_HARDWARE
-        if(!mIsAudio) {
+        if(!mIsAudio && 0) {
           int32_t frameRate, hfr, multiple;
           bool success = mMeta->findInt32(kKeySampleRate, &frameRate);
           CHECK(success);
@@ -1987,7 +1987,7 @@ status_t MPEG4Writer::Track::threadEntry() {
 
         timestampUs -= previousPausedDurationUs;
         CHECK(timestampUs >= 0);
-        if (!mIsAudio && hasBFrames) {
+        if (!mIsAudio && hasBFrames && 0) {
             /*
              * Composition time: timestampUs
              * Decoding time: decodingTimeUs
